/* Index used for searching */
/*
   Fields used:
     url, name, type, filename, authors, routine name, comments, parameters,
     categories, and attributes
*/
title = "HiiHAT";
subtitle = "Developer Documentation for HiiHAT IDL functions.";
libdata = new Array();
libdataItem = 0;



libdata[libdataItem++] = new Array("metric_learning/hiihat_apply_metric.html", "hiihat_apply_metric.pro", ".pro file in metric_learning/ directory", "hiihat_apply_metric.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("metric_learning/hiihat_apply_metric.html#hiihat_apply_metric", "hiihat_apply_metric", "routine in hiihat_apply_metric.pro", "hiihat_apply_metric.pro", "Brian Bue   ", "hiihat_apply_metric", " Given an image and a precomputed LDA matrix transforms the image.  The transformed image is maximally linearly separable with respect  to the classes used to compute the LDA matrix.   ", "r_fid    file id of returned image  pos    subset of spectral bands  use_dims    spatial subset of input image  in_memory    store transformed image in memory  verbose    print verbose output to console   rank    rank of output transform  img_fid    file id of image with a set of ROIs defining classes for metric learning  matrix_fid    file id of intput matrix  out_filename    name of output file to save transformed image   ", "metric_learning", "  Copyright 2011, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  

libdata[libdataItem++] = new Array("util/hiihat_assert.html", "hiihat_assert.pro", ".pro file in util/ directory", "hiihat_assert.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("util/hiihat_assert.html#hiihat_assert", "hiihat_assert", "routine in hiihat_assert.pro", "hiihat_assert.pro", "Lukas Mandrake   ", "hiihat_assert", " Assert that a given statement is true, otherwise clear the system of all files, ROI's   ", "title    title for dialog message box   statement    boolean function to assert  text    error message if assertion fails   ", "util", "  2009 (LM): initially written    Dec 05, 2010 (BDB): added docstr     Copyright 2010, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations. By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.     returns all functions if assertion fails   ");
  
  

libdata[libdataItem++] = new Array("util/hiihat_check_file.html", "hiihat_check_file.pro", ".pro file in util/ directory", "hiihat_check_file.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("util/hiihat_check_file.html#hiihat_check_file", "hiihat_check_file", "routine in hiihat_check_file.pro", "hiihat_check_file.pro", "Brian D. Bue   ", "hiihat_check_file", " File checking function for hiihat ui. Parameter read or write should be set  depending on whether the selected file is an input or an output file. Title is the name  given to the envi_pickfile dialog box and any error dialog boxes that will be generated if  errmsg is not equal to \ \ .   ", "read   check read permissions  write   check write permissions   filename", "util", "   Dec 12, 2010 (BDB): docstr added.     Copyright 2010, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.    The following code will check to see if fname is readable.    fname=envi_pickfile()    readable=hiihat_check_file(fname,read=1)    if readable ne 0 then print,  File is readable      0 if file is not accessible (or is a directory) (read/write)   1 if file is accessible (read) and does not already exist (write)   2 if file is accessible and already exists (write)   ");
  
  

libdata[libdataItem++] = new Array("ui/hiihat_classify_ask_params.html", "hiihat_classify_ask_params.pro", ".pro file in ui/ directory", "hiihat_classify_ask_params.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("ui/hiihat_classify_ask_params.html#hiihat_classify_ask_params", "hiihat_classify_ask_params", "routine in hiihat_classify_ask_params.pro", "hiihat_classify_ask_params.pro", "Brian D Bue  ", "hiihat_classify_ask_params", " Routine to query user for image segmentation parameters.   ", "class_method    string value for classification method name  method    ENVI value of classification method for CLASS_DOIT function  in_memory    compute classification in memory if out_filename not specified/valid  out_filename    output file name for classification map  rule_in_memoryrule_out_filenamebase_filename    base name of image file to segment, if available  classify_cancel    flag to cancel classification operation   ", "ui", "  Copyright 2011, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  

libdata[libdataItem++] = new Array("util/hiihat_classify_mindist.html", "hiihat_classify_mindist.pro", ".pro file in util/ directory", "hiihat_classify_mindist.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("util/hiihat_classify_mindist.html#hiihat_classify_mindist", "hiihat_classify_mindist", "routine in hiihat_classify_mindist.pro", "hiihat_classify_mindist.pro", "Brian Bue   ", "hiihat_classify_mindist", " Minimum distance to class means classifier.   ", "dist_metric    name of distance metric to use in hiihat_distance_metric function  verbose    print verbose output to console   train_data    labeled training samples  train_labels    labels for each of the training samples  test_data    unlabeled test samples to classify   ", "util", "  Copyright 2011, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  

libdata[libdataItem++] = new Array("util/hiihat_distance_matrix.html", "hiihat_distance_matrix.pro", ".pro file in util/ directory", "hiihat_distance_matrix.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("util/hiihat_distance_matrix.html#hiihat_distance_matrix", "hiihat_distance_matrix", "routine in hiihat_distance_matrix.pro", "hiihat_distance_matrix.pro", "Brian D. Bue  ", "hiihat_distance_matrix", " Calculate a distance matrix between a set of spectra   ", "dist_metric     distance function to use  spectraA     list of nA spectra to compare  spectraB     if specified, calculate nA x nB distance matrix between spectraA and      spectraB   ", "util", "  Jan 11, 2011 (BDB): initially written     Copyright 2010, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations. By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.     The following code will calculate the nA x nB distance matrix between sA and sB     dmtxAB = hiihat_distance_matrix('euclidean', sA, sB)      nA x nA or nA x nB distance matrix   ");
  
  

libdata[libdataItem++] = new Array("util/hiihat_divide_mean.html", "hiihat_divide_mean.pro", ".pro file in util/ directory", "hiihat_divide_mean.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("util/hiihat_divide_mean.html#hiihat_divide_mean", "hiihat_divide_mean", "routine in hiihat_divide_mean.pro", "hiihat_divide_mean.pro", "Lukas Mandrake and Brian Bue   ", "hiihat_divide_mean", " Divide image by mean or mean column spectrum   ", "denom_spectrumimage    image to filter  div_type    type of division to perform,  None ,  Spatial Mean ,  Spectral     Mean , or  Spectrum    ", "util", "   2009 (LM): code initially written in hiihat_preprocess.pro     Dec 05, 2010 (BDB): routine created from proprocessing code     Copyright 2009, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations. By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.     The following code divides the mean spectrum out of image I     hiihat_divide_mean, I,  Spectral Mean       filtered copy of image   ");
  
  

libdata[libdataItem++] = new Array("ui/hiihat_endmember_ask_params.html", "hiihat_endmember_ask_params.pro", ".pro file in ui/ directory", "hiihat_endmember_ask_params.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("ui/hiihat_endmember_ask_params.html#hiihat_endmember_ask_params", "hiihat_endmember_ask_params", "routine in hiihat_endmember_ask_params.pro", "hiihat_endmember_ask_params.pro", "David Ray Thompson   ", "hiihat_endmember_ask_params", " Query user for endmember detection parameters   ", "coalesce_threshold     SMACC only, maximum Spectral Angle Mapper (SAM)      threshold above which endmember spectra are considered unique      (angle/1000), in range [0,1000], values outside range set to nearest bound  n_endmembers     number of endmembers in range [1,30]  method     detection method, one of 'NFINDR' or 'SMACC'   out_filename: out, required, type=string     file name of output spectral librar   in_memory: out, optional, type=boolean     store endmember rois and library in memory   roi_out_filename: out, required, type=string     file name of output roi file   base_filename: in, optional, type=string     base name of image file to segment, if available  out_filenamebase_filenameroi_out_filenamein_memoryendmember_cancel     true if user cancels endmember detection   ", "ui", "   2009 (DRT): Initial implementation.     Dec 14, 2010 (BDB): Added docstr.     Copyright 2009, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.     hiihat_endmember_ask_params, coalesce_threshold=50,                               n_endmembers=10, method='NFINDR',                               endmember_cancel=endmember_cancel   ");
  
  

libdata[libdataItem++] = new Array("ui/hiihat_event_apply_metric.html", "hiihat_event_apply_metric.pro", ".pro file in ui/ directory", "hiihat_event_apply_metric.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("ui/hiihat_event_apply_metric.html#hiihat_event_apply_metric", "hiihat_event_apply_metric", "routine in hiihat_event_apply_metric.pro", "hiihat_event_apply_metric.pro", "David Thompson, Brian Bue   ", "hiihat_event_apply_metric", " Event callback for learn metric menu option.   ", "ev   input event   ", "ui", "  Copyright 2011, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  

libdata[libdataItem++] = new Array("ui/hiihat_event_autoclass.html", "hiihat_event_autoclass.pro", ".pro file in ui/ directory", "hiihat_event_autoclass.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("ui/hiihat_event_autoclass.html#hiihat_event_autoclass", "hiihat_event_autoclass", "routine in hiihat_event_autoclass.pro", "hiihat_event_autoclass.pro", "David Ray Thompson   ", "hiihat_event_autoclass", " Event callback for autoclass menu option.   ", "ev   input event   ", "ui", "  Copyright 2009, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  

libdata[libdataItem++] = new Array("ui/hiihat_event_config_reload.html", "hiihat_event_config_reload.pro", ".pro file in ui/ directory", "hiihat_event_config_reload.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("ui/hiihat_event_config_reload.html#hiihat_event_config_reload", "hiihat_event_config_reload", "routine in hiihat_event_config_reload.pro", "hiihat_event_config_reload.pro", "Brian Bue   ", "hiihat_event_config_reload", " Event callback for reload config file menu option.   ", "ev    input event   ", "ui", "  Copyright 2011, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  

libdata[libdataItem++] = new Array("ui/hiihat_event_config_save.html", "hiihat_event_config_save.pro", ".pro file in ui/ directory", "hiihat_event_config_save.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("ui/hiihat_event_config_save.html#hiihat_event_config_save", "hiihat_event_config_save", "routine in hiihat_event_config_save.pro", "hiihat_event_config_save.pro", "Brian Bue   ", "hiihat_event_config_save", " Event callback for save configuration menu option.   ", "ev    input event   ", "ui", "  Copyright 2011, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  

libdata[libdataItem++] = new Array("ui/hiihat_event_find_neutral.html", "hiihat_event_find_neutral.pro", ".pro file in ui/ directory", "hiihat_event_find_neutral.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("ui/hiihat_event_find_neutral.html#hiihat_event_find_neutral", "hiihat_event_find_neutral", "routine in hiihat_event_find_neutral.pro", "hiihat_event_find_neutral.pro", "David Ray Thompson   ", "hiihat_event_find_neutral", " Event callback for neutral region detection function   ", "ev   input event   ", "ui", "  Copyright 2009, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  

libdata[libdataItem++] = new Array("ui/hiihat_event_get_superpixel_endmembers.html", "hiihat_event_get_superpixel_endmembers.pro", ".pro file in ui/ directory", "hiihat_event_get_superpixel_endmembers.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("ui/hiihat_event_get_superpixel_endmembers.html#hiihat_event_get_superpixel_endmembers", "hiihat_event_get_superpixel_endmembers", "routine in hiihat_event_get_superpixel_endmembers.pro", "hiihat_event_get_superpixel_endmembers.pro", "David Ray Thompson   ", "hiihat_event_get_superpixel_endmembers", " Event callback for superpixel endmember detection menu option.   ", "ev   input event   ", "ui", "  Copyright 2009, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  

libdata[libdataItem++] = new Array("ui/hiihat_event_help.html", "hiihat_event_help.pro", ".pro file in ui/ directory", "hiihat_event_help.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("ui/hiihat_event_help.html#hiihat_event_help", "hiihat_event_help", "routine in hiihat_event_help.pro", "hiihat_event_help.pro", "David Thompson, Brian Bue   ", "hiihat_event_help", " Event callback for learn metric menu option.   ", "ev   input event   ", "ui", "  Copyright 2011, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  

libdata[libdataItem++] = new Array("ui/hiihat_event_learn_metric.html", "hiihat_event_learn_metric.pro", ".pro file in ui/ directory", "hiihat_event_learn_metric.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("ui/hiihat_event_learn_metric.html#hiihat_event_learn_metric", "hiihat_event_learn_metric", "routine in hiihat_event_learn_metric.pro", "hiihat_event_learn_metric.pro", "Brian Bue   ", "hiihat_event_learn_metric", " Event callback for learn metric menu option.   ", "ev   input event   ", "ui", "  Copyright 2011, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  

libdata[libdataItem++] = new Array("ui/hiihat_event_mean_image.html", "hiihat_event_mean_image.pro", ".pro file in ui/ directory", "hiihat_event_mean_image.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("ui/hiihat_event_mean_image.html#hiihat_event_mean_image", "hiihat_event_mean_image", "routine in hiihat_event_mean_image.pro", "hiihat_event_mean_image.pro", "Brian Bue   ", "hiihat_event_mean_image", " Event callback for mean image calculation menu option.   ", "ev   input event   ", "ui", "  Copyright 2011, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  

libdata[libdataItem++] = new Array("ui/hiihat_event_preprocess.html", "hiihat_event_preprocess.pro", ".pro file in ui/ directory", "hiihat_event_preprocess.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("ui/hiihat_event_preprocess.html#hiihat_event_preprocess", "hiihat_event_preprocess", "routine in hiihat_event_preprocess.pro", "hiihat_event_preprocess.pro", "David Ray Thompson   ", "hiihat_event_preprocess", " Event callback for preprocessing menu option.   ", "ev   input event   ", "ui", "  Copyright 2009, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  

libdata[libdataItem++] = new Array("ui/hiihat_event_segment.html", "hiihat_event_segment.pro", ".pro file in ui/ directory", "hiihat_event_segment.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("ui/hiihat_event_segment.html#hiihat_event_segment", "hiihat_event_segment", "routine in hiihat_event_segment.pro", "hiihat_event_segment.pro", "David Ray Thompson   ", "hiihat_event_segment", " Event callback for image segmentation menu option.   ", "ev   input event   ", "ui", "  Copyright 2009, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  

libdata[libdataItem++] = new Array("util/hiihat_generate_class_colors.html", "hiihat_generate_class_colors.pro", ".pro file in util/ directory", "hiihat_generate_class_colors.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("util/hiihat_generate_class_colors.html#hiihat_generate_class_colors", "hiihat_generate_class_colors", "routine in hiihat_generate_class_colors.pro", "hiihat_generate_class_colors.pro", "David Ray Thompson and Brian D. Bue   ", "hiihat_generate_class_colors", " Generates n_classes rgb colors for spectral libraries and ROIs   ", "class_names    names of each class  colors    generated color array  class_prefix    string prefix to append to class names   n_classes    number of classes for which colors are to be generated  ", "util", "  Copyright 2010, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  

libdata[libdataItem++] = new Array("initialization/hiihat_get_config_parm.html", "hiihat_get_config_parm.pro", ".pro file in initialization/ directory", "hiihat_get_config_parm.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("initialization/hiihat_get_config_parm.html#hiihat_get_config_parm", "hiihat_get_config_parm", "routine in hiihat_get_config_parm.pro", "hiihat_get_config_parm.pro", "Brian Bue  ", "hiihat_get_config_parm", " Returns the value of the requested configuration parameter. On the first call, initializes the  read-only, global system variable  !hiihat_config via the hiihat_parse_config_file function.  Returns the value of the requested parameter, or 0 if the parameter  is not found in the configuration parameter structure   ", "cfg_file    path to config file to parse   parm   name of parameter to retrieve (case insensitive string).  ", "initialization", "   Dec 05, 2010 (BDB): Initially commited to svn.     Returns the value of the configuration parameter  verbose      verbose = hiihat_get_config_parm( verbose )   ");
  
  

libdata[libdataItem++] = new Array("util/hiihat_get_mean_spectrum.html", "hiihat_get_mean_spectrum.pro", ".pro file in util/ directory", "hiihat_get_mean_spectrum.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("util/hiihat_get_mean_spectrum.html#hiihat_get_mean_spectrum", "hiihat_get_mean_spectrum", "routine in hiihat_get_mean_spectrum.pro", "hiihat_get_mean_spectrum.pro", "David Ray Thompson and Brian D. Bue   ", "hiihat_get_mean_spectrum", " Calculates the mean spectrum from a set of pixels, detecting bad  (infinite) and zeroed pixels   ", "mean_spectrum    output mean spectrum  bad_pixels    number of bad pixels  zero_pixels    number of zeroed pixels   pixels    set of n input pixels of dimension nb  ", "util", "  Copyright 2010, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  

libdata[libdataItem++] = new Array("preprocessing/hiihat_get_neutral_region.html", "hiihat_get_neutral_region.pro", ".pro file in preprocessing/ directory", "hiihat_get_neutral_region.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("preprocessing/hiihat_get_neutral_region.html#hiihat_get_neutral_region", "hiihat_get_neutral_region", "routine in hiihat_get_neutral_region.pro", "hiihat_get_neutral_region.pro", "David Ray Thompson   ", "hiihat_get_neutral_region", " Detects a neutral spectrum within the given image and creates a ratio  image by dividing out the detected spectrum.   ", "img_fid    file id for input image data  seg_fid    file id for input image segmentation map  roi_out_id    file id of output roi file  spectrum_out_filename    filename to save output spectrum   ratioed_out_filenamer_fidcoalesce_thresholduse_dimsneutral_spectrumspectrum_bestbest_segment_idverbose", "preprocessing", "  Copyright 2009, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  

libdata[libdataItem++] = new Array("endmember_detection/hiihat_get_superpixel_endmembers.html", "hiihat_get_superpixel_endmembers.pro", ".pro file in endmember_detection/ directory", "hiihat_get_superpixel_endmembers.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("endmember_detection/hiihat_get_superpixel_endmembers.html#hiihat_get_superpixel_endmembers", "hiihat_get_superpixel_endmembers", "routine in hiihat_get_superpixel_endmembers.pro", "hiihat_get_superpixel_endmembers.pro", "David Ray Thompson   ", "hiihat_get_superpixel_endmembers", " Perform endmember detection using either the SMACC or N-FINDR algorithm.   ", "seg_fid    file id of input image segmentation map. required if ignore_segmentation is false  n_endmembers    number of endmembers to extract  out_name_roi    output file for saving ROIs  out_name_sli    output file for saving endmember spectral library  out_name_txt    output file for saving spectral library (txt format)  r_fid    file id of output endmember spectral library  abund_r_fid    file id of output abundance image (SMACC only)  coalesce_threshold    SMACC coalesce threshold  use_dims    user-specified dimensions to process  use_nfindr    use the N-FINDR endmember extraction algorithm instead of SMACC  ignore_segmentation    segment image pixels rather than image superpixels (as defined by the     segmentation map)  seed    random seed for N-FINDR endmember extraction  in_memory    compute endmembers in memory instead of writing to file  verbose    enable verbose status messages  gui_status    output gui-based status updates for non-essential output   img_fid    file id of input image   ", "endmember_detection", "  Copyright 2009, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  

libdata[libdataItem++] = new Array("metric_learning/hiihat_learn_metric.html", "hiihat_learn_metric.pro", ".pro file in metric_learning/ directory", "hiihat_learn_metric.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("metric_learning/hiihat_learn_metric.html#hiihat_learn_metric", "hiihat_learn_metric", "routine in hiihat_learn_metric.pro", "hiihat_learn_metric.pro", "Brian Bue   ", "hiihat_learn_metric", " Given an image and a set of ROIs defining a set of classes,  transforms the image via LDA. The transformed image is maximally linearly  separable with respect to the given classes.   ", "max_samples    maximum number of samples per class  reg_parms    regularization parameters  use_dims    spatial subset of input image  pos    subset of spectral bands  r_fid    file id of returned image  in_memory    store transformed image in memory  out_filename    name of output file to save transformed image  out_matrix_filename    name of output file to save lda matrix image  matrix_in_memory    store transformation matrix in memory  matrix_r_fid    file id of matrix image  verbose    print verbose output to console   img_fid    File id of image with a set of ROIs defining classes for metric learning   ", "metric_learning", "  Copyright 2011, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  

libdata[libdataItem++] = new Array("ui/hiihat_learn_metric_ask_params.html", "hiihat_learn_metric_ask_params.pro", ".pro file in ui/ directory", "hiihat_learn_metric_ask_params.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("ui/hiihat_learn_metric_ask_params.html#hiihat_learn_metric_ask_params", "hiihat_learn_metric_ask_params", "routine in hiihat_learn_metric_ask_params.pro", "hiihat_learn_metric_ask_params.pro", "Brian D. Bue  ", "hiihat_learn_metric_ask_params", " Routine to query user for metric learning parameters.   ", "reg_parms    set of regularization parameters determined by reg_tune menu parameter  in_memory    store metric learning image transform in memory  base_filename    base file name to assign to output image  out_filename    name of file in which to save transformed image  out_matrix_filenamematrix_in_memorymax_samples    maximum number of samples per class  learn_metric_cancel    flag to cancel metric learning operation   ", "ui", "  Copyright 2011, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  

libdata[libdataItem++] = new Array("util/hiihat_load_rois.html", "hiihat_load_rois.pro", ".pro file in util/ directory", "hiihat_load_rois.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("util/hiihat_load_rois.html#hiihat_load_rois", "hiihat_load_rois", "routine in hiihat_load_rois.pro", "hiihat_load_rois.pro", "Brian D. Bue   ", "hiihat_load_rois", " Loads the set of temporarily saved ROIs in IDL_TMPDIR/tmp.roi, if available   ", "roi_file    path to roi file for loading archived set of rois, if not specified,     defaults to  IDL_TMPDIR/temp.roi   verbose    print verbose output to console   ", "util", "  Copyright 2011, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  

libdata[libdataItem++] = new Array("util/hiihat_lowpass_image_filter.html", "hiihat_lowpass_image_filter.pro", ".pro file in util/ directory", "hiihat_lowpass_image_filter.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("util/hiihat_lowpass_image_filter.html#hiihat_lowpass_image_filter", "hiihat_lowpass_image_filter", "routine in hiihat_lowpass_image_filter.pro", "hiihat_lowpass_image_filter.pro", "Lukas Mandrake and Brian Bue   ", "hiihat_lowpass_image_filter", " Perform low-pass image filtering on the given image   ", "image    image to filter  filt_size    size of filter   ", "util", "   2009 (LM): code initially written in hiihat_preprocess.pro     Dec 05, 2010 (BDB): routine created from proprocessing code     Copyright 2009, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations. By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.     The following code filter bands with a kernel of size 5     hiihat_lowpass_image_filter, I, 5      filtered copy of image   ");
  
  

libdata[libdataItem++] = new Array("metric_learning/hiihat_mdmc_lda.html", "hiihat_mdmc_lda.pro", ".pro file in metric_learning/ directory", "hiihat_mdmc_lda.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("metric_learning/hiihat_mdmc_lda.html#hiihat_mdmc_lda", "hiihat_mdmc_lda", "routine in hiihat_mdmc_lda.pro", "hiihat_mdmc_lda.pro", "Brian Bue   ", "hiihat_mdmc_lda", " Calculate a LDA-based transform for multi-class/multi-domain input data.   ", "domains    domains of input samples  reg_parms    regularization parameters  in_rank    rank of transform to calculate (default = k-1)  rank    rank of calculated transform  verbose    print verbose output to console  error    error code if method fails (e.g., due to singular matrix)   data    labeled data to determine transform  labels    labels for each of the data points   ", "metric_learning", "  Copyright 2011, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  

libdata[libdataItem++] = new Array("metric_learning/hiihat_mdmc_xvalidate.html", "hiihat_mdmc_xvalidate.pro", ".pro file in metric_learning/ directory", "hiihat_mdmc_xvalidate.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("metric_learning/hiihat_mdmc_xvalidate.html#hiihat_mdmc_xvalidate", "hiihat_mdmc_xvalidate", "routine in hiihat_mdmc_xvalidate.pro", "hiihat_mdmc_xvalidate.pro", "Brian Bue   ", "hiihat_mdmc_xvalidate", " Wrapper to learn optimal regularization parameter lambda \in [0,1]  for LDA via cross validation.   ", "domains    domains of input samples  in_rank    rank of transform to calculate (default = k-1)  rank    rank of calculated transform  verbose    print verbose output to console   data    labeled data to determine transform  labels    labels for each of the data points  reg_parms    regularization parameters (lambda, num_folds, etc)   ", "metric_learning", "  Copyright 2011, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  

libdata[libdataItem++] = new Array("util/hiihat_median_filter_image.html", "hiihat_median_filter_image.pro", ".pro file in util/ directory", "hiihat_median_filter_image.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("util/hiihat_median_filter_image.html#hiihat_median_filter_image", "hiihat_median_filter_image", "routine in hiihat_median_filter_image.pro", "hiihat_median_filter_image.pro", "Lukas Mandrake and Brian Bue  ", "hiihat_median_filter_image", " Median filter image   ", "img    image to median filter  median_filter_width    width in bands of median filter to use   ", "util", "   2009 (LM): code initially written in hiihat_preprocess.pro     Dec 05, 2010 (BDB): routine created from proprocessing code     Copyright 2010, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations. By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.     The following code will median filter the bands of the the input image I    with a width 3 filter     hiihat_median_filter_image, I, 3      median filtered image   ");
  
  

libdata[libdataItem++] = new Array("ui/hiihat_menu.html", "hiihat_menu.pro", ".pro file in ui/ directory", "hiihat_menu.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("ui/hiihat_menu.html#hiihat_menu_define_buttons", "hiihat_menu_define_buttons", "routine in hiihat_menu.pro", "hiihat_menu.pro", "David R. Thompson  ", "hiihat_menu_define_buttons", " Hii-HAT main menu interface. Based on code included in the CAT  toolkit for CRISM, by Shannon Pelkey June 2006   ", "buttonInfo    menu button ui parameter   ", "ui", "  Copyright 2009, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  libdata[libdataItem++] = new Array("ui/hiihat_menu.html#hiihat_menu", "hiihat_menu", "routine in hiihat_menu.pro", "hiihat_menu.pro", "", "hiihat_menu", " This is a placeholder function neccessary because IDL requires each source  file to contain a function by the same name as the file in order for the  resolve_routine function (used to rebuild HiiHAT) to work properly.  ", "", "          -1", "");
  
  

libdata[libdataItem++] = new Array("endmember_detection/hiihat_nfindr.html", "hiihat_nfindr.pro", ".pro file in endmember_detection/ directory", "hiihat_nfindr.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("endmember_detection/hiihat_nfindr.html#hypervolume", "hypervolume", "routine in hiihat_nfindr.pro", "hiihat_nfindr.pro", "David Ray Thompson & Lukas Mandrake  ", "hypervolume", " Calculates the hyperdimensional volume analog by taking  the determinant of an augmented endmember matrix.  keeparray is a way to pass the existing data structure around without  having to redefine it. Speeds up the processing quite a bit.  ", "keeparray    augmented endmember matrix  data    endmember matrix  ids    endmember ids  ", "endmember_detection", "");
  
  libdata[libdataItem++] = new Array("endmember_detection/hiihat_nfindr.html#hiihat_nfindr", "hiihat_nfindr", "routine in hiihat_nfindr.pro", "hiihat_nfindr.pro", "David Ray Thompson & Lukas Mandrake  ", "hiihat_nfindr", " Applies the NFINDR algorithm of Dr. E. Winter to discover  endmembers by expanding a simplex to the largest possible  volume. May not give a singular answer where no single pixel  endmember exists (local maxima), so must be run multiple times with  different random seeds.   ", "use_dims     user-specified dimensions  out_name_sli     output path for spectra and (optional) roi's  out_name_txt     output path for spectra and (optional) roi's (text format)  roi_outfile     filename of roi file to generate (single pixel ROI's)  r_spectra_fid     Return fid of the endmember spectra  mnf_r_fid     Return fid of MNF transformed data  abund_r_fid     return fid for the abundance image (currently unused)  r_endmember_ids     Return array of the endmember ids (linear indexes into the img array)  seed     random seed to use to continue proper random numbers  reject_zeros     reject zero or uniform bands  in_memory     store output in memory rather than in file  verbose     verbose output to console   gui_statusfid_image     fid of image file to process  n_endmembers     number of endmembers to generate   ", "endmember_detection", "  Copyright 2009, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  

libdata[libdataItem++] = new Array("util/hiihat_nm_wavetable_lookup.html", "hiihat_nm_wavetable_lookup.pro", ".pro file in util/ directory", "hiihat_nm_wavetable_lookup.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("util/hiihat_nm_wavetable_lookup.html#hiihat_nm_wavetable_lookup", "hiihat_nm_wavetable_lookup", "routine in hiihat_nm_wavetable_lookup.pro", "hiihat_nm_wavetable_lookup.pro", "David Ray Thompson & Lukas Mandrake   ", "hiihat_nm_wavetable_lookup", "  Seeks the closest nm wavelength in a given wavelength vector and returns   its band number   ", "target_nm    target value in nanometers  wvt    wavelength table in nm   ", "util", "  2009 (DRT, LM): initially implemented     Copyright 2009, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.   ");
  
  

libdata[libdataItem++] = new Array("util/hiihat_normalize_array.html", "hiihat_normalize_array.pro", ".pro file in util/ directory", "hiihat_normalize_array.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("util/hiihat_normalize_array.html#hiihat_normalize_array", "hiihat_normalize_array", "routine in hiihat_normalize_array.pro", "hiihat_normalize_array.pro", "David Ray Thompson and Brian D. Bue  ", "hiihat_normalize_array", " Normalize an input array by the L1, L2, or L Inf norm   ", "array     array to normalize  norm_type     normalization function to use   ", "util", "  2009 (DRT): initially written in hiihat_preprocess.pro   Dec 05, 2010 (BDB): moved into separate routine     Copyright 2010, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations. By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.     The following code will normalize the input array x by the L2 norm     normed_x = hiihat_normalize_array(x, 'Euclidean (L 2)')      normalized copy of array   ");
  
  

libdata[libdataItem++] = new Array("util/hiihat_normalize_image.html", "hiihat_normalize_image.pro", ".pro file in util/ directory", "hiihat_normalize_image.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("util/hiihat_normalize_image.html#hiihat_normalize_image", "hiihat_normalize_image", "routine in hiihat_normalize_image.pro", "hiihat_normalize_image.pro", "Lukas Mandrake and Brian Bue  ", "hiihat_normalize_image", " Normalize an input image by the L1, L2, or L Inf norm   ", "image    image to normalize  norm_type    normalization function to use   ", "util", "   2009 (LM): code initially written in hiihat_preprocess.pro     Dec 05, 2010 (BDB): routine created from proprocessing code     Copyright 2010, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations. By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.     The following code will normalize bands of the the input image I by the L2 norm     normalize_image, I, 'Euclidean (L 2)'      normalized copy of image   ");
  
  

libdata[libdataItem++] = new Array("initialization/hiihat_parse_config_file.html", "hiihat_parse_config_file.pro", ".pro file in initialization/ directory", "hiihat_parse_config_file.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("initialization/hiihat_parse_config_file.html#hiihat_convert_string_typed", "hiihat_convert_string_typed", "routine in hiihat_parse_config_file.pro", "hiihat_parse_config_file.pro", "", "hiihat_convert_string_typed", " helper function to convert numeric strings to float, fix, or string  ", "str   input string to parse  ", "          -1", "");
  
  libdata[libdataItem++] = new Array("initialization/hiihat_parse_config_file.html#hiihat_parse_config_file", "hiihat_parse_config_file", "routine in hiihat_parse_config_file.pro", "hiihat_parse_config_file.pro", "", "hiihat_parse_config_file", " Parses configuration parameters in the (global) hiihat.sav file and (user-defined)  hiihat.cfg parameter file. If save_defaults is true, the default parameters in hiihat.sav  are overwritten. Global parameters can be accessed via the hiihat_get_config_param  function.   ", "cfg_file   config file to parse (default: hiihat.cfg)  def_file   .sav file to parse and optionally write (default: hiihat_defaults.sav)  save_defaults   overwrite defaults saved in hiihat_defaults.sav file  verbose    print verbose output to console   defaults_only    use default values only (don't parse cfg file)  ", "initialization", "   Dec 05, 2010 (BDB): Initially commited to svn.      The following code will parse the config file  input.cfg     and save the parsed values to the  defaults.sav  file:     hiihat_parse_config_file, cfg_file='input.cfg', def_file='defaults.sav', $                            save_defaults=1   ");
  
  

libdata[libdataItem++] = new Array("preprocessing/hiihat_preprocess.html", "hiihat_preprocess.pro", ".pro file in preprocessing/ directory", "hiihat_preprocess.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("preprocessing/hiihat_preprocess.html#hiihat_preprocess", "hiihat_preprocess", "routine in hiihat_preprocess.pro", "hiihat_preprocess.pro", "David Ray Thompson   ", "hiihat_preprocess", " Perform preprocesing steps for a set of known image formats   ", "out_filename    output file name, required if in_memory=0  image_type    name of known image type, or  Generic  for an unspecified image type  filter_negativemedian_filter_width    width of median filter, 0 for no filtering  norm_type    type of normalization to perform,  None  for no normalization  div_type    divide out  Mean ,  Spectrum ,  MeanColumn , or  None  for no division  lowpass_filter    width of lowpass filter kernel, 0 for no filtering  r_fid    return file id of preprocessed image  in_memory    enable in-memory computation of image, required if out_fname unspecified  use_dims    user defined dimensions  verbose    enable verbose console output   in_file_id    fid of input file to preprocess   ", "preprocessing", "  Copyright 2009, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  

libdata[libdataItem++] = new Array("ui/hiihat_preprocess_ask_params.html", "hiihat_preprocess_ask_params.pro", ".pro file in ui/ directory", "hiihat_preprocess_ask_params.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("ui/hiihat_preprocess_ask_params.html#hiihat_preprocess_ask_params", "hiihat_preprocess_ask_params", "routine in hiihat_preprocess_ask_params.pro", "hiihat_preprocess_ask_params.pro", "David Ray Thompson  ", "hiihat_preprocess_ask_params", " GUI wrapper for querying parameters specific to hiihat_preprocess function   ", "image_type    name of known image type, or  Generic  for an unspecified image type  filter_negativemedian_filter_width    width of median filter, 0 for no filtering  norm_type    type of normalization to perform,  None  for no normalization  div_type    divide out  Mean  or  MeanColumn ,  None  for no division  lowpass_filter    width of lowpass filter kernel, 0 for no filtering  out_filename    file name of output preprocessed image  base_filename    base name of image file to segment, if available  in_memory    output preprocessed image in memory  preprocess_cancel    set to 1 if user cancels preprocessing operations   ", "ui", "  Copyright 2009, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  

libdata[libdataItem++] = new Array("util/hiihat_rainbow_index.html", "hiihat_rainbow_index.pro", ".pro file in util/ directory", "hiihat_rainbow_index.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("util/hiihat_rainbow_index.html#hiihat_rainbow_index", "hiihat_rainbow_index", "routine in hiihat_rainbow_index.pro", "hiihat_rainbow_index.pro", "David Ray Thompson   ", "hiihat_rainbow_index", " Takes an index between 0 and 1 and maps it to a rainbow spectra that  returns an appropriate 24 bit integer representation in RGB space.  Ensure you have loadct,0 active (grey scale) for sanity.   ", "BLACK   Add black to the below_red region of the matrix  WHITE   Add white to the above_purple region of the matrix   index   value in [0,1] to map to RGB   ", "util", "  Copyright 2009, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.     24 bit integer representation in RGB space.  ");
  
  

libdata[libdataItem++] = new Array("testing/hiihat_run_tests.html", "hiihat_run_tests.pro", ".pro file in testing/ directory", "hiihat_run_tests.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("testing/hiihat_run_tests.html#hiihat_run_tests", "hiihat_run_tests", "routine in hiihat_run_tests.pro", "hiihat_run_tests.pro", "Brian D. Bue   ", "hiihat_run_tests", " Runs all of the HiiHAT tests in the HiiHAT pro/testing  directory. All testcases are assumed to start with the prefix   test_hiihat.  Rebuilds the testcase if keyword argument build=1   ", "build    Rebuild all unit tests in testing directory before running them.   ", "testing", "   Dec 10, 2010 (BDB): Initial implementation     Copyright 2010, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.     To run all of the hiihat tests (and rebuild them before we run    them), we do:     hiihat_run_tests, build=1   ");
  
  

libdata[libdataItem++] = new Array("util/hiihat_save_rois.html", "hiihat_save_rois.pro", ".pro file in util/ directory", "hiihat_save_rois.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("util/hiihat_save_rois.html#hiihat_save_rois", "hiihat_save_rois", "routine in hiihat_save_rois.pro", "hiihat_save_rois.pro", "Brian D. Bue   ", "hiihat_save_rois", " Saves the current set of ROIs to IDL_TMPDIR/temp.roi   ", "roi_file    path to roi file for saving current set of rois, if not specified,     defaults to  IDL_TMPDIR/temp.roi   verbose    print verbose output to console   ", "util", "  Copyright 2011, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  

libdata[libdataItem++] = new Array("util/hiihat_seg_purity.html", "hiihat_seg_purity.pro", ".pro file in util/ directory", "hiihat_seg_purity.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("util/hiihat_seg_purity.html#hiihat_seg_purity", "hiihat_seg_purity", "routine in hiihat_seg_purity.pro", "hiihat_seg_purity.pro", "Brian D. Bue   ", "hiihat_seg_purity", "  Calculate the overall and per-segment  purity  with respect to a given class   map.   ", "ignore_classes    list of class values to ignore (e.g. 0 for background classes)   purity    overall purity of seg_map with respect to class_map  mixtures    purity of individual segments with respect to class_map  imgdistancesverbose    print verbose output to console   Aseg_map    segmentation map  class_map    labeled class map   ", "util", "   Dec 31, 2011 (BDB):  Initial implementation     Copyright 2011, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.   ");
  
  

libdata[libdataItem++] = new Array("ui/hiihat_segment_ask_params.html", "hiihat_segment_ask_params.pro", ".pro file in ui/ directory", "hiihat_segment_ask_params.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("ui/hiihat_segment_ask_params.html#hiihat_segment_ask_params", "hiihat_segment_ask_params", "routine in hiihat_segment_ask_params.pro", "hiihat_segment_ask_params.pro", "David Ray Thompson  ", "hiihat_segment_ask_params", " Routine to query user for image segmentation parameters.   ", "c    threshold for segment merging  min_size    minimum size for each segment  dist_metric    distance metric for pixel-based comparisons  in_memory    store segmentation result in memory  base_filename    base name of image file to segment, if available  out_filename    output filename  segment_cancel    flag to cancel segmentation operation   ", "ui", "  Copyright 2009, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  

libdata[libdataItem++] = new Array("segmentation/hiihat_segment_felzenszwalb.html", "hiihat_segment_felzenszwalb.pro", ".pro file in segmentation/ directory", "hiihat_segment_felzenszwalb.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("segmentation/hiihat_segment_felzenszwalb.html#find_root", "find_root", "routine in hiihat_segment_felzenszwalb.pro", "hiihat_segment_felzenszwalb.pro", "", "find_root", " find the root index associated with this node   ", "elements   an Nx3 array with each column giving [parent rank size]    note that the parent field is another index  that doesn't necessarily    indicate the direct parent, just some node higher in the tree.  By    following these indices we'll eventually get to a's root  a   the node index  ", "segmentation", "");
  
  libdata[libdataItem++] = new Array("segmentation/hiihat_segment_felzenszwalb.html#join_tree", "join_tree", "routine in hiihat_segment_felzenszwalb.pro", "hiihat_segment_felzenszwalb.pro", "", "join_tree", " join the (disjoint) trees with root nodes a and b   ", "elements   an Nx3 array with each column giving [parent rank size]  a   root node a  b   root node b   ", "segmentation", "");
  
  libdata[libdataItem++] = new Array("segmentation/hiihat_segment_felzenszwalb.html#hiihat_segment_felzenszwalb", "hiihat_segment_felzenszwalb", "routine in hiihat_segment_felzenszwalb.pro", "hiihat_segment_felzenszwalb.pro", "David Ray Thompson   ", "hiihat_segment_felzenszwalb", "  Segment a hyperspectral image using the    efficient graph-based segmentation  approach of Pedro Felzenszwalib et al.   We omit their smoothing step (presume that the data is already clean).   ", "M    square, symmmetric matrix to use in mahalanobis distance (ignored if     dist_metric is not  mahalanobis )   out_filename    output file name  in_memory    output to memory rather than file  r_fid    fid of output segmentation (either file or memory)  verbose    enable verbose console output  use_dims    user defined dimensions  gui_status    enable gui_status  permute_segments    randomly permute segment ids  in_file_fid    fid of input image to be segmented  c    threshold parameter, larger values prefer larger segment sizes  min_size    minimum segment size in pixels  dist_metric    distance metric to use in segmentation (default euc^2)   ", "segmentation", "   2009 (DRT): Initial implementation     Dec 31, 2010 (BDB): docstr added     Copyright 2009, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.      hiihat_segment_felzenszwalb, in_file_fid, c, min_size, dist_metric,                                out_filename=out_filename, in_memory=in_memory,                                r_fid=seg_fid, verbose=verbose, use_dims=use_dims,                                save_mean=save_mean, mean_image_name=mean_image_name,                                gui_status=gui_status   ");
  
  

libdata[libdataItem++] = new Array("util/hiihat_segment_spectra.html", "hiihat_segment_spectra.pro", ".pro file in util/ directory", "hiihat_segment_spectra.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("util/hiihat_segment_spectra.html#hiihat_segment_spectra", "hiihat_segment_spectra", "routine in hiihat_segment_spectra.pro", "hiihat_segment_spectra.pro", "David Ray Thompson (DRT)   ", "hiihat_segment_spectra", " Calculates mean signatures for a given image using its corresponding  segmentation image, optionally returns the  mean image  populated with  the calculated segments. Returns the mean spectra of each superpixel segment.   Robust option will tolerate infinities and other nonsense input, returning   a zeroed out spectrum. If user specifies r_fid, then   mean_image_name and r_fid are used to generate a new full image   where each superpixel has its mean spectrum replacing the entire   segment area. If /return_image is not set, mean_image_name and r_fid   are ignored.   ", "spectrause_dims    override default dimensions  r_fid    return file id for output segment mean spectra  variances    band variances of segment pixels  mean_fid    fid of output mean image  mean_image_name    output mean image filename, if unspecified, will compute mean image in memory  return_image    return mean image   verbose    enable verbose status messages  img_fid     fid of input image data  seg_fid     fid of segmentation image   ", "util", "   2009 (DRT): initially implemented     Dec 13, 2010 (BDB): added docstr     Copyright 2009, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.      The following code will return the segments for img_fid/seg_fid along    with the mean image for the data (in memory).     hiihat_segment_spectra, img_fid, seg_fid, spectra=spectra,                          r_fid=r_fid, return_image=1, verbose=1      If the  robust_means  parameter is set to 1 in the configuration file, this    procedure will zero out means with zero or infinite band values   ");
  
  

libdata[libdataItem++] = new Array("util/hiihat_spec_difference.html", "hiihat_spec_difference.pro", ".pro file in util/ directory", "hiihat_spec_difference.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("util/hiihat_spec_difference.html#hiihat_spec_difference", "hiihat_spec_difference", "routine in hiihat_spec_difference.pro", "hiihat_spec_difference.pro", "David Ray Thompson and Brian D. Bue   ", "hiihat_spec_difference", " returns a floating point value representing distance between two spectra  ", "reject_zeros   reject zero or infinite spectra  M   tranformation matrix for Mahalanobis distance function, if unspecified,    reverts to euclidean distance   adata   first input spectrum  bdata   second input spectrum  dist_metric   distance metric between adata and bdata   ", "segmentation", "   2009 (DRT): Initial implementation     Dec 31, 2010 (BDB): docstr added     Copyright 2009, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.   ");
  
  

libdata[libdataItem++] = new Array("util/hiihat_split_data.html", "hiihat_split_data.pro", ".pro file in util/ directory", "hiihat_split_data.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("util/hiihat_split_data.html#hiihat_split_data", "hiihat_split_data", "routine in hiihat_split_data.pro", "hiihat_split_data.pro", "Brian Bue   ", "hiihat_split_data", " Utility function for splitting labeled data across multiple folds  for cross-validation. If multiple domains are specified, points are  sampled sequentially across each domain and indices are returned in  order of the domains.   ", "domains    domains for each of the data points  verbose    print verbose output to console  train_idx    output training indices  test_idx    output testing indices   labels    labels for each of the data points  num_folds    number of folds for data splitting   ", "util", "  Copyright 2011, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  

libdata[libdataItem++] = new Array("util/hiihat_strreplace.html", "hiihat_strreplace.pro", ".pro file in util/ directory", "hiihat_strreplace.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("util/hiihat_strreplace.html#hiihat_strreplace", "hiihat_strreplace", "routine in hiihat_strreplace.pro", "hiihat_strreplace.pro", "Lukas Mandrake  ", "hiihat_strreplace", " Replaces first instance of one string inside another, works on  arrays as well  ", "ignore_case   ignore case in string search   instrings   input string  str2find   string to locate within instrings  str2sub   string to substitute for str2find   ", "util", "  Copyright 2009, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  

libdata[libdataItem++] = new Array("ui/hiihat_transform_ask_params.html", "hiihat_transform_ask_params.pro", ".pro file in ui/ directory", "hiihat_transform_ask_params.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("ui/hiihat_transform_ask_params.html#hiihat_transform_ask_params", "hiihat_transform_ask_params", "routine in hiihat_transform_ask_params.pro", "hiihat_transform_ask_params.pro", "Brian D. Bue   ", "hiihat_transform_ask_params", " Select a pre-computed transformation matrix for application to a  known image format   ", "trans_filename    transfomation matrix filename  out_filename    name of file in which to save transformed image  in_memory    store transformed image in memory  max_rank    maximum rank of output transform (default = 5)  base_filename    prefix to append to output filenames if available  verbosetransform_cancel    user selected cancel   image_type    Image type to transform, from hiihat_pp description provided in hdr file   ", "ui", "  Copyright 2011, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  

libdata[libdataItem++] = new Array("util/hiihat_write_spectrum.html", "hiihat_write_spectrum.pro", ".pro file in util/ directory", "hiihat_write_spectrum.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("util/hiihat_write_spectrum.html#hiihat_write_spectrum", "hiihat_write_spectrum", "routine in hiihat_write_spectrum.pro", "hiihat_write_spectrum.pro", "Lukas Mandrake   ", "hiihat_write_spectrum", " Write out a spectrum both as a text file and a SLI img file. spectrum  should be [nb,instances]   ", "spectrum    array of spectra to write  nb    number of bands  sli_filename    name of output .sli library file  wllabel    label for spectrum in output library  text_filename    name of output .txt library file  r_fidlib_label    label for output library  fwhm    full-width-at-half-maximum values for library spectra, if available   ", "util", "  Copyright 2009, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  

libdata[libdataItem++] = new Array("build/make_hiihat.html", "make_hiihat.pro", ".pro file in build/ directory", "make_hiihat.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("build/make_hiihat.html#make_hiihat", "make_hiihat", "routine in make_hiihat.pro", "make_hiihat.pro", "Lukas Mandrake and Brian D. Bue   ", "make_hiihat", " Rebuilds all .pro files in the hiihat root directory. Assumes that every file has a pro/function definition in the file  that matches the file name (i.e.,  procedure_name.pro  contains a function  named  procedure_name ). Returns all functions on exit.   ", "", "build", "   2009 (Lukas Mandrake): Initially implemented    Dec 21, 2010 (BDB): Added docstr, recursive directory parsing     Copyright 2009, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  

libdata[libdataItem++] = new Array("build/make_hiihat_docs.html", "make_hiihat_docs.pro", ".pro file in build/ directory", "make_hiihat_docs.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("build/make_hiihat_docs.html#make_hiihat_docs", "make_hiihat_docs", "routine in make_hiihat_docs.pro", "make_hiihat_docs.pro", "B. Bue    Copyright 2011, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  _  ", "make_hiihat_docs", " This script makes all of the idldoc-based documentation for all procedures in hiihat/pro.   ", "", "          -1", "");
  
  

libdata[libdataItem++] = new Array("build/mh.html", "mh.pro", ".pro file in build/ directory", "mh.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("build/mh.html#mh", "mh", "routine in mh.pro", "mh.pro", "Brian Bue   ", "mh", " Alias for building hiihat procedures that also rebuilds the make_hiihat script   ", "", "build", "   Dec 21, 2010 (BDB): Initially implemented     Copyright 2010, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  

libdata[libdataItem++] = new Array("testing/test_hiihat_6d_synthetic_ut__define.html", "test_hiihat_6d_synthetic_ut__define.pro", ".pro file in testing/ directory", "test_hiihat_6d_synthetic_ut__define.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("testing/test_hiihat_6d_synthetic_ut__define.html#test_hiihat_6d_synthetic_ut__define", "test_hiihat_6d_synthetic_ut__define", "routine in test_hiihat_6d_synthetic_ut__define.pro", "test_hiihat_6d_synthetic_ut__define.pro", "Brian D. Bue   ", "test_hiihat_6d_synthetic_ut__define", " Unit test entry point definition for synthetic multispectral  image. Initializes MGTestCase structure for MGUnit unit test.   ", "", "testing", "   Jan 3, 2011 (BDB): Initial implementation     Copyright 2011, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.     This unit test can be run with the following command:     mgunit, 'test_hiihat_6d_synthetic_ut'   ");
  
  libdata[libdataItem++] = new Array("testing/test_hiihat_6d_synthetic_ut__define.html#test_hiihat_6d_synthetic_ut::test_0_init", "test_hiihat_6d_synthetic_ut::test_0_init", "routine in test_hiihat_6d_synthetic_ut__define.pro", "test_hiihat_6d_synthetic_ut__define.pro", "Brian D. Bue   ", "test_hiihat_6d_synthetic_ut::test_0_init", " Initialization test and parameters for 6d synthetic dataset.      Initializes parameters used by the 6d-synthetic unit tests and    verifies that the directory containing the data is    accessible. This test is run before any other 6-d synthetic    unit tests are executed.   ", "", "testing", "   Jan 3, 2011 (BDB): Initial implementation     Copyright 2011, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  libdata[libdataItem++] = new Array("testing/test_hiihat_6d_synthetic_ut__define.html#test_hiihat_6d_synthetic_ut::test_segmentation", "test_hiihat_6d_synthetic_ut::test_segmentation", "routine in test_hiihat_6d_synthetic_ut__define.pro", "test_hiihat_6d_synthetic_ut__define.pro", "Brian D. Bue   ", "test_hiihat_6d_synthetic_ut::test_segmentation", " Tests segmentation functions on 11 class noisy 6d-synthetic data.      Tests the felzenszwalb segmentation algorithm on a 6-dimensional    synthetic image. The synthetic image contains 11 noisy classes,    including one single pixel class, which are all separable with the    squared Euclidean metric. This function tests to make sure that    the segmentation algorithm produces 11  pure  segments (a pure    segment consists of pixels from only one class).   ", "", "testing", "   Jan 3, 2011 (BDB): Initial implementation     Copyright 2011, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  libdata[libdataItem++] = new Array("testing/test_hiihat_6d_synthetic_ut__define.html#test_hiihat_6d_synthetic_ut::test_nfindr", "test_hiihat_6d_synthetic_ut::test_nfindr", "routine in test_hiihat_6d_synthetic_ut__define.pro", "test_hiihat_6d_synthetic_ut__define.pro", "Brian D. Bue   ", "test_hiihat_6d_synthetic_ut::test_nfindr", " Tests the N-FINDR algorithm on noisy 8-class synthetic data.      Test the hiihat_get_superpixel_endmembers function using the    N-FINDR algorithm using noisy 8-class synthetic data. First    attempts to detect the exact class means using the known class map    as the input to the superpixel endmember detection routine. These    endmembers should match the class means exactly. Next    attempts to detect superpixel endmembers from a new    oversegmentation of the image data. These endmembers should be    within the known noise variance of the class means. N-FINDR can    only extract num_bands-1 endmembers, but those endmembers should    each be representatives from a different class.   ", "", "testing", "   Jan 3, 2011 (BDB): Initial implementation     Copyright 2011, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  libdata[libdataItem++] = new Array("testing/test_hiihat_6d_synthetic_ut__define.html#test_hiihat_6d_synthetic_ut::test_smacc", "test_hiihat_6d_synthetic_ut::test_smacc", "routine in test_hiihat_6d_synthetic_ut__define.pro", "test_hiihat_6d_synthetic_ut__define.pro", "Brian D. Bue   ", "test_hiihat_6d_synthetic_ut::test_smacc", " Tests the SMACC algorithm on noisy 8-class synthetic data.      Test the hiihat_get_superpixel_endmembers function using the    SMACC algorithm using noisy 8-class synthetic data. First    attempts to detect the exact class means using the known class map    as the input to the superpixel endmember detection routine. These    endmembers should match the class means exactly. Next    attempts to detect superpixel endmembers from a new    oversegmentation of the image data. These endmembers should be    within the known noise variance of the class means. SMACC can    extract an arbitrary number of endmembers, so we should be able to    retrieve all 8 class means and select pixel endmembers that are    near each of those 8 means.   ", "", "testing", "   Jan 3, 2011 (BDB): Initial implementation     Copyright 2011, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  

libdata[libdataItem++] = new Array("testing/test_hiihat_checker_ut__define.html", "test_hiihat_checker_ut__define.pro", ".pro file in testing/ directory", "test_hiihat_checker_ut__define.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("testing/test_hiihat_checker_ut__define.html#test_hiihat_checker_ut__define", "test_hiihat_checker_ut__define", "routine in test_hiihat_checker_ut__define.pro", "test_hiihat_checker_ut__define.pro", "Brian D. Bue   ", "test_hiihat_checker_ut__define", " Unit test entry point definition for checkerboard image.  Initializes MGTestCase structure for MGUnit unit test.   ", "", "testing", "   Dec 10, 2010 (BDB): Initial implementation     Copyright 2010, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.     This unit test can be run with the following command:     mgunit, 'test_hiihat_checker_ut'   ");
  
  libdata[libdataItem++] = new Array("testing/test_hiihat_checker_ut__define.html#test_hiihat_checker_ut::test_0_init", "test_hiihat_checker_ut::test_0_init", "routine in test_hiihat_checker_ut__define.pro", "test_hiihat_checker_ut__define.pro", "Brian D. Bue   ", "test_hiihat_checker_ut::test_0_init", " Initialization test file for checkerboard segmentation and endmember  detection unit tests.      Initializes parameters used by the checkerboard unit tests and    verifies that the directory containing the data is    accessible. This test is run before any other checkerboard    unit tests are executed.   ", "", "testing", "   Dec 10, 2010 (BDB): Initial implementation     Copyright 2010, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  libdata[libdataItem++] = new Array("testing/test_hiihat_checker_ut__define.html#test_hiihat_checker_ut::test_segmentation", "test_hiihat_checker_ut::test_segmentation", "routine in test_hiihat_checker_ut__define.pro", "test_hiihat_checker_ut__define.pro", "Brian D. Bue   ", "test_hiihat_checker_ut::test_segmentation", " Tests segmentation functions on 3 and 9 class noisy checkerboard images.      Tests the Felzenswalb segmentation algorithm on 3 and 9 class    checkerboard noisy/noiseless images. Both cases should produce segmentations    equivalent to the given class map with the provided    parameters. The first test assures that with a min_size parameter    much smaller than the smallest class size (in pixels), the correct    segmentation is still produced with noiseless data. The second    test performs the same segmentation on noisy data, assuring that    all segments are  pure  with respect to the class map (a pure    segment consists of pixels from only one class). The final    test assures that the correct segmentation is produced when the    min_size is set to the minimum known class size.   ", "", "testing", "   Dec 10, 2010 (BDB): Initial implementation     Copyright 2010, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  libdata[libdataItem++] = new Array("testing/test_hiihat_checker_ut__define.html#test_hiihat_checker_ut::test_endmember_detection", "test_hiihat_checker_ut::test_endmember_detection", "routine in test_hiihat_checker_ut__define.pro", "test_hiihat_checker_ut__define.pro", "Brian D. Bue   ", "test_hiihat_checker_ut::test_endmember_detection", " Tests endmember detection functions on 3 and 9 class noisy checkerboard images.      Tests both the SMACC and N-FINDR endmember detection algorithms on    the checkerboard images. Both algorithms use the known class map    as the superpixels, and attempt to retrieve the known number of    classes for each image. SMACC will succeed and the endmembers    should match the class means. N-FINDR should fail gracefully on    all inputs since it can only extract (2,num_bands-1] endmembers.   ", "", "testing", "   Dec 10, 2010 (BDB): Initial implementation     Copyright 2010, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  libdata[libdataItem++] = new Array("testing/test_hiihat_checker_ut__define.html#test_hiihat_checker_ut::test_neutral_region", "test_hiihat_checker_ut::test_neutral_region", "routine in test_hiihat_checker_ut__define.pro", "test_hiihat_checker_ut__define.pro", "Lukas Mandrake   ", "test_hiihat_checker_ut::test_neutral_region", " Tests neutral region on 3x3 noisy grid.      Tests the neutral region finder on a 3x3 macrogrid with artificial    noise. Determines whether the found neutral region detected is the    lower-left grid (correct answer) regardless of the neutral region    precise shape determined.   ", "", "testing", "   Feb 16, 2011 (LM): Initial implementation     Copyright 2011, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  

libdata[libdataItem++] = new Array("testing/test_hiihat_learn_metric_ut__define.html", "test_hiihat_learn_metric_ut__define.pro", ".pro file in testing/ directory", "test_hiihat_learn_metric_ut__define.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("testing/test_hiihat_learn_metric_ut__define.html#test_hiihat_learn_metric_ut__define", "test_hiihat_learn_metric_ut__define", "routine in test_hiihat_learn_metric_ut__define.pro", "test_hiihat_learn_metric_ut__define.pro", "Brian D. Bue   ", "test_hiihat_learn_metric_ut__define", " Unit test entry point definition for metric learning functions.  Initializes MGTestCase structure for MGUnit unit test.   ", "", "testing", "   Jan 7, 2011 (BDB): Initial implementation     Copyright 2011, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.     This unit test can be run with the following command:     mgunit, 'test_hiihat_learn_metric_ut'   ");
  
  libdata[libdataItem++] = new Array("testing/test_hiihat_learn_metric_ut__define.html#test_hiihat_learn_metric_ut::test_0_init", "test_hiihat_learn_metric_ut::test_0_init", "routine in test_hiihat_learn_metric_ut__define.pro", "test_hiihat_learn_metric_ut__define.pro", "Brian D. Bue   ", "test_hiihat_learn_metric_ut::test_0_init", " Initialization test and parameters for metric learning functions.      Initializes parameters used by the learn_metricing unit tests and    verifies that the HiiHAT directory is    accessible. This test is run before any other learn_metricing    unit tests are executed.   ", "", "testing", "   Jan 7, 2011 (BDB): Initial implementation     Copyright 2011, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  libdata[libdataItem++] = new Array("testing/test_hiihat_learn_metric_ut__define.html#test_hiihat_learn_metric_ut::test_split_data", "test_hiihat_learn_metric_ut::test_split_data", "routine in test_hiihat_learn_metric_ut__define.pro", "test_hiihat_learn_metric_ut__define.pro", "Brian D. Bue   ", "test_hiihat_learn_metric_ut::test_split_data", " Tests the split data function given a set of labels      Tests the split data function given a set of labels   ", "", "testing", "   May 30, 2011 (BDB): Initial implementation     Copyright 2011, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  libdata[libdataItem++] = new Array("testing/test_hiihat_learn_metric_ut__define.html#test_hiihat_learn_metric_ut::test_classify_mindist", "test_hiihat_learn_metric_ut::test_classify_mindist", "routine in test_hiihat_learn_metric_ut__define.pro", "test_hiihat_learn_metric_ut__define.pro", "Brian D. Bue   ", "test_hiihat_learn_metric_ut::test_classify_mindist", " Tests the mindist classifier on three linearly separable gaussians   ", "", "testing", "   May 30, 2011 (BDB): Initial implementation     Copyright 2011, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  libdata[libdataItem++] = new Array("testing/test_hiihat_learn_metric_ut__define.html#test_hiihat_learn_metric_ut::test_metric_learning", "test_hiihat_learn_metric_ut::test_metric_learning", "routine in test_hiihat_learn_metric_ut__define.pro", "test_hiihat_learn_metric_ut__define.pro", "Brian D. Bue   ", "test_hiihat_learn_metric_ut::test_metric_learning", " Tests metric learning in separating two nonspherical gaussians      Tests the metric learning function in separating a pair of    nonspherical gaussians   ", "", "testing", "   May 27, 2011 (BDB): Initial implementation     Copyright 2011, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  

libdata[libdataItem++] = new Array("testing/test_hiihat_preprocess_ut__define.html", "test_hiihat_preprocess_ut__define.pro", ".pro file in testing/ directory", "test_hiihat_preprocess_ut__define.pro", "", "", "", "", "          -1", "");
  
  
  libdata[libdataItem++] = new Array("testing/test_hiihat_preprocess_ut__define.html#test_hiihat_preprocess_ut__define", "test_hiihat_preprocess_ut__define", "routine in test_hiihat_preprocess_ut__define.pro", "test_hiihat_preprocess_ut__define.pro", "Brian D. Bue   ", "test_hiihat_preprocess_ut__define", " Unit test entry point definition for preprocessing functions.  Initializes MGTestCase structure for MGUnit unit test.   ", "", "testing", "   Jan 7, 2011 (BDB): Initial implementation     Copyright 2011, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.     This unit test can be run with the following command:     mgunit, 'test_hiihat_preprocess_ut'   ");
  
  libdata[libdataItem++] = new Array("testing/test_hiihat_preprocess_ut__define.html#test_hiihat_preprocess_ut::test_0_init", "test_hiihat_preprocess_ut::test_0_init", "routine in test_hiihat_preprocess_ut__define.pro", "test_hiihat_preprocess_ut__define.pro", "Brian D. Bue   ", "test_hiihat_preprocess_ut::test_0_init", " Initialization test and parameters for preprocessing functions.      Initializes parameters used by the preprocessing unit tests and    verifies that the HiiHAT directory is    accessible. This test is run before any other preprocessing    unit tests are executed.   ", "", "testing", "   Jan 7, 2011 (BDB): Initial implementation     Copyright 2011, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  libdata[libdataItem++] = new Array("testing/test_hiihat_preprocess_ut__define.html#test_hiihat_preprocess_ut::test_median_filter", "test_hiihat_preprocess_ut::test_median_filter", "routine in test_hiihat_preprocess_ut__define.pro", "test_hiihat_preprocess_ut__define.pro", "Brian D. Bue   ", "test_hiihat_preprocess_ut::test_median_filter", " Tests median filtering function on a simple image.      Tests the median filtering function on a 10x10x4 image where all    of the elements of each band correspond to their (zero-indexed)    band number. The median filtered result should consist of only the    3 values [1,2,3].   ", "", "testing", "   Jan 7, 2011 (BDB): Initial implementation     Copyright 2011, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  libdata[libdataItem++] = new Array("testing/test_hiihat_preprocess_ut__define.html#test_hiihat_preprocess_ut::test_normalizaton", "test_hiihat_preprocess_ut::test_normalizaton", "routine in test_hiihat_preprocess_ut__define.pro", "test_hiihat_preprocess_ut__define.pro", "Brian D. Bue   ", "test_hiihat_preprocess_ut::test_normalizaton", " Tests normalization function on a simple image using several norm types      Tests the normalization function on a 20x20x10 unitary image using    the L1, L2, and Linf norms. Fails if any of the norm values are    non-unique or do not match their analytical value.   ", "", "testing", "   Jan 7, 2011 (BDB): Initial implementation     Copyright 2011, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  libdata[libdataItem++] = new Array("testing/test_hiihat_preprocess_ut__define.html#test_hiihat_preprocess_ut::test_meandiv", "test_hiihat_preprocess_ut::test_meandiv", "routine in test_hiihat_preprocess_ut__define.pro", "test_hiihat_preprocess_ut__define.pro", "Brian D. Bue   ", "test_hiihat_preprocess_ut::test_meandiv", " Tests mean division function on a simple image.      Tests the mean diviscion function on a 10x10x10 unitary    image. Fails if the Mean and MeanColumn divisions do not produce    the same output.   ", "", "testing", "   Jan 7, 2011 (BDB): Initial implementation     Copyright 2011, by the California Institute of Technology. ALL RIGHTS   RESERVED. United States Government Sponsorship acknowledged. Any commercial   use must be negotiated with the Office of Technology Transfer at the   California Institute of Technology.    This software may be subject to U.S. export control laws and regulations.  By   accepting this document, the user agrees to comply with all applicable U.S.   export laws and regulations.  User has the responsibility to obtain export   licenses, or other export authority as may be required before exporting such   information to foreign countries or providing access to foreign persons.  ");
  
  

